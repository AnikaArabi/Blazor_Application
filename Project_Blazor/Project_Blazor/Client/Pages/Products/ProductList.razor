@page "/Products/List"
@inject HttpClient http
@inject IToastService toastService
<div class="row">
    <div class="col-12">
        <h3>Product List</h3>
        <div class="d-flex justify-content-end mb-1">
            <a class="btn btn-primary btn-sm" href="/Products/Create">Create New</a>
        </div>
        @if(products is null)
        {
            <div>Loading...</div>
        }
        else
        {
            <table class="table table-bordered">
                <thead class="table-light">
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Available?</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var p in products)
                    {
                        <tr>
                            <td><img src="/Uploads/@p.Picture" class="rounded-circle" style="width:40px"  /></td>
                            <td>@p.ProductName</td>
                            <td>@p.Price.ToString("0.00")</td>
                            <td>@(p.IsAvailable ? "Yes": "No")</td>
                            <td>
                                <a class="btn btn-success btn-sm" href="/Products/edit/@p.ProductID"><i class="bi bi-pencil"></i></a>
                                <button @onclick="@( ()=>Delete(p.ProductID))" class="btn btn-danger btn-sm"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    private Product[]? products;
    protected override async Task OnInitializedAsync()
    {
        products = await http.GetFromJsonAsync<Product[]>("api/Products");
    }
    private async Task Delete(int id)
    {
        var response = await http.DeleteAsync($"api/Products/{id}");
        if (response.IsSuccessStatusCode)
        {
            toastService.ShowSuccess("Data deleted successfully", "Success");
            products = await http.GetFromJsonAsync<Product[]>("api/Products");
        }
        else
        {
            toastService.ShowError("Failed to delete data.", "Error");
        }
    }
}
